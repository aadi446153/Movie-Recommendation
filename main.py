# -*- coding: utf-8 -*-
"""Main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d-Ce3Nv9Om8lB-6jCUY55gHv3zKQ1QD4
"""
print('Hello')
import pandas as pd

movies=pd.read_csv('dataset.csv')

#!pip install pandas-profiling[notebook,html]

import pandas_profiling
import pandas as pd
report=pandas_profiling.ProfileReport(movies)
report.to_file('report.html')
from pandas.plotting import scatter_matrix

movies.head(10)

movies.describe()

movies.info()

movies.isnull().sum()

"""Feature Selection Part"""

movies.columns

movies=movies[['id', 'title', 'overview', 'genre','vote_average']]

movies

movies['tags'] = movies['overview']+movies['genre']

movies

new_data  = movies.drop(columns=['overview'])

new_data

from sklearn.feature_extraction.text import CountVectorizer

cv=CountVectorizer(max_features=10000, stop_words='english')

print(cv)

vector=cv.fit_transform(new_data['tags'].values.astype('U')).toarray()

vector.shape

print(vector)

from sklearn.metrics.pairwise import cosine_similarity

similarity=cosine_similarity(vector)

similarity

new_data[new_data['title']=="The Godfather"].index[0]

distance = sorted(list(enumerate(similarity[2])), reverse=True, key=lambda vector:vector[1])
for i in distance[0:5]:
    print(new_data.iloc[i[0]].title)

#!pip install fuzzywuzzy

import difflib

def recommend(movies):
    l1=[]
    l2=[]
    l3=[]
    matches = difflib.get_close_matches(movies, new_data['title'])
    if matches:
        index = new_data[new_data['title'].isin(matches)].index[0]
        distance = sorted(list(enumerate(similarity[index])), reverse=True, key=lambda vector: vector[1])
        for i in distance[0:5]:
            l1.append(new_data.iloc[i[0]]['title'])
            l2.append(new_data.iloc[i[0]]['vote_average'])
            l3.append(new_data.iloc[i[0]]['genre'])
        all=list(zip(l1,l2,l3))
        df=pd.DataFrame(all,index =range(1,6),columns =['Movie Title','Rating','Gerne'])
        print(df)

recommend("aatman")